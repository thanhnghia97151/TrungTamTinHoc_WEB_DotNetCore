@model IEnumerable<Category>

<link href="~/css/navbar_multi.css" rel="stylesheet"/>
<nav class="navbar navbar-expand-lg navbar-dark bg-primary">
	<div class="container-fluid">
		<a class="navbar-brand" href="#">Brand</a>
		<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#main_nav"  aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<div class="collapse navbar-collapse" id="main_nav">
		  	<ul class="navbar-nav">
		    	@*<li class="nav-item active"> <a class="nav-link" href="#">Home </a> </li>
		    	<li class="nav-item"><a class="nav-link" href="#"> About </a></li>
		    	<li class="nav-item dropdown" id="myDropdown">
		      		<a class="nav-link dropdown-toggle" href="#" data-bs-toggle="dropdown">  Treeview menu  </a>
		      		<ul class="dropdown-menu">
			        	<li><a class="dropdown-item" href="#"> Dropdown item 1 </a></li>
			        	<li><a class="dropdown-item" href="#"> Dropdown item 2 » </a>
				          	<ul class="submenu dropdown-menu">
				            	<li><a class="dropdown-item" href="#">Submenu item 1</a></li>
				            	<li><a class="dropdown-item" href="#">Submenu item 2</a></li>
				            	<li><a class="dropdown-item" href="#">Submenu item 3 » </a>
					              	<ul class="submenu dropdown-menu">
					                	<li><a class="dropdown-item" href="#">Multi level 1</a></li>
					                	<li><a class="dropdown-item" href="#">Multi level 2</a></li>
					              	</ul>
				            	</li>
				            	<li><a class="dropdown-item" href="#">Submenu item 4</a></li>
				            	<li><a class="dropdown-item" href="#">Submenu item 5</a></li>
				          	</ul>
			        	</li>
			        	<li><a class="dropdown-item" href="#"> Dropdown item 3 </a></li>
			        	<li><a class="dropdown-item" href="#"> Dropdown item 4 </a></li>
		      		</ul>
		    	</li>*@

				
			
							@foreach (var item in Model)
							{
							<li class="nav-item dropdown">
								<a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#">@item.Name</a>
								@if (item.Children != null)
								{
									<ul class="dropdown-menu">
										@foreach (var child in item.Children)
										{
											<li>
												<a class="dropdown-item" href="#/@child.Id">@child.Name</a>
												@if (child.Children != null)
												{
													<ul  class="submenu dropdown-menu">
														@foreach (var child2 in child.Children)
														{
															<li>
																<a class="dropdown-item" href="#/@child2.Id">@child2.Name</a>
																	@if (child2.Children != null)
																	{
																		<ul  class="submenu dropdown-menu">
																			@foreach (var child3 in child2.Children)
																			{
																				<li><a class="dropdown-item" href="#/@child3.Id">@child3.Name</a></li>
																			}
																		</ul>
																	}
																</li>
														}
													</ul>
												}
											</li>
										}
									</ul>
								}
							</li>
							}



		  	</ul>
		</div>
	</div>
</nav>
<script>
	document.addEventListener("DOMContentLoaded", function(){
	// make it as accordion for smaller screens
	if (window.innerWidth < 992) {
	  // close all inner dropdowns when parent is closed
	  document.querySelectorAll('.navbar .dropdown').forEach(function(everydropdown){
	    everydropdown.addEventListener('hidden.bs.dropdown', function () {
	      // after dropdown is hidden, then find all submenus
	        this.querySelectorAll('.submenu').forEach(function(everysubmenu){
	          // hide every submenu as well
	          everysubmenu.style.display = 'none';
	        });
	    })
	  });
	  document.querySelectorAll('.dropdown-menu a').forEach(function(element){
	    element.addEventListener('click', function (e) {
	        let nextEl = this.nextElementSibling;
	        if(nextEl && nextEl.classList.contains('submenu')) {	
	          // prevent opening link if link needs to open dropdown
	          e.preventDefault();
	          if(nextEl.style.display == 'block'){
	            nextEl.style.display = 'none';
	          } else {
	            nextEl.style.display = 'block';
	          }
	        }
	    });
	  })
	}
	// end if innerWidth
}); 
</script>